name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "main" ]

env:
  NODE_VERSION: '22'
  PNPM_VERSION: '10.18.0'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  preview:
    name: Build and Preview
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        id: lint
        run: pnpm lint
        continue-on-error: true

      - name: Run type checking
        id: typecheck
        run: pnpm check-types
        continue-on-error: true

      - name: Run tests with coverage
        id: test
        run: |
          pnpm test -- --coverage --coverageReporters=json-summary
        continue-on-error: true

      - name: Build applications
        id: build
        run: pnpm build
        continue-on-error: true

      - name: Extract Coverage Metrics
        id: coverage
        if: always()
        run: |
          if [ -f "coverage/coverage-summary.json" ]; then
            COVERAGE=$(jq -r '.total.lines.pct' coverage/coverage-summary.json)
            echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
          else
            echo "percentage=N/A" >> $GITHUB_OUTPUT
          fi

      - name: Comment PR with Results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const lintStatus = '${{ steps.lint.outcome }}' === 'success' ? '✅' : '❌';
            const typeStatus = '${{ steps.typecheck.outcome }}' === 'success' ? '✅' : '❌';
            const testStatus = '${{ steps.test.outcome }}' === 'success' ? '✅' : '❌';
            const buildStatus = '${{ steps.build.outcome }}' === 'success' ? '✅' : '❌';
            const coverage = '${{ steps.coverage.outputs.percentage }}';
            
            const comment = `## 🔍 PR Preview & Quality Check
            
            ### ✨ Build Status
            | Check | Status |
            |-------|--------|
            | Linting | ${lintStatus} |
            | Type Check | ${typeStatus} |
            | Tests | ${testStatus} |
            | Build | ${buildStatus} |
            
            ### 📊 Code Coverage
            ${coverage !== 'N/A' ? `**${coverage}%** line coverage` : 'Coverage data not available'}
            
            ### 📦 Build Information
            - **Commit**: \`${context.sha.substring(0, 7)}\`
            - **Branch**: \`${context.payload.pull_request.head.ref}\`
            - **Node Version**: \`${{ env.NODE_VERSION }}\`
            - **PNPM Version**: \`${{ env.PNPM_VERSION }}\`
            
            ### 🚀 Next Steps
            ${buildStatus === '✅' ? 
              'All checks passed! Ready for review.' : 
              'Please fix the failing checks before merging.'}
            
            ---
            *View detailed test results in the [Actions tab](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });